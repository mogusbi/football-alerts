version: 2.1

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/repo

generate_cache_key: &generate_cache_key
  run:
    command: ./scripts/checksum.sh /tmp/checksum.txt
    name: Generate cache key

restore_cache: &restore_cache
  restore_cache:
    keys:
      - football-alerts-dependencies-v1-{{ checksum "/tmp/checksum.txt" }}
      - football-alerts-dependencies-v1-

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  build:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *generate_cache_key
      - <<: *restore_cache
      -
        run:
          command: npm i
          name: Install dependencies
      -
        save_cache:
          key: football-alerts-dependencies-v1-{{ checksum "/tmp/checksum.txt" }}
          paths:
            - node_modules
            - applications/admin/node_modules
            - applications/backend/node_modules
            - packages/serverless-aws-exports/node_modules
      -
        persist_to_workspace:
          paths:
            - ./packages/*/lib/*
            - ./applications/*/lib/*
          root: .

  deploy:
    docker:
      - image: circleci/node:10.15
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *generate_cache_key
      - <<: *restore_cache
      - <<: *attach_workspace
      -
        run:
          command: echo ${NODE_OPTIONS}
          name: Increase memory
      -
        run:
          command: npm run deploy -- -- -- --stage develop --force
          name: Deploy

  unit-test:
    docker:
      - image: breezejs/sonar-scanner:latest
    working_directory: ~/repo
    steps:
      - checkout
      - <<: *generate_cache_key
      - <<: *restore_cache
      - <<: *attach_workspace
      -
        run:
          command: npm run test:ci
          name: Unit test
#      -
#        run:
#          command: sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.branch.name=$CIRCLE_BRANCH
#          name: Static code analysis

workflows:
  version: 2

  build-test-deploy:
    jobs:
      - build
      -
        unit-test:
          requires:
            - build
      -
        deploy:
          requires:
            - unit-test
